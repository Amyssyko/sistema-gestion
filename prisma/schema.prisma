// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define la entidad "buses"
model Bus {
  placa     String    @id @unique
  modelo    String
  capacidad Int
  anio      Int
  ingresos  Ingreso[]
  egresos   Egreso[]
  usuario   Usuario?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

// Define la entidad "Ingresos"
model Ingreso {
  id          Int       @id @default(autoincrement())
  fecha       DateTime  @db.Date
  descripcion String
  monto       Decimal
  bus         Bus?      @relation(fields: [busId], references: [placa])
  busId       String?
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
}

// Define la entidad "Egresos"

model Egreso {
  id          Int        @id @default(autoincrement())
  descripcion String
  monto       Decimal
  fecha       DateTime   @db.Date
  bus         Bus?       @relation(fields: [busId], references: [placa])
  busId       String?
  proveedor   Proveedor? @relation(fields: [proveedorId], references: [id])
  proveedorId Int?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

// Define la entidad "choferes"

enum Role {
  usuario
  empleado
  admin
}

model Usuario {
  id        Int       @id @default(autoincrement())
  dni       String?   @unique @db.VarChar(10)
  role      Role      @default(usuario)
  nombre    String?
  apellido  String?
  telefono  String?   @unique @db.VarChar(10)
  email     String?   @unique
  password  String?
  provincia String?
  ciudad    String?
  calle     String?
  bus       Bus?      @relation(fields: [busPlaca], references: [placa])
  busPlaca  String?   @unique
  pago      Pago[]
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model Proveedor {
  id        Int       @id @default(autoincrement())
  nombre    String?
  telefono  String?   @unique
  email     String?   @unique
  direccion String?
  egreso    Egreso[]
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model Pago {
  id        Int       @id @default(autoincrement())
  valor     Decimal
  detalle   String
  fecha     DateTime
  Usuario   Usuario?  @relation(fields: [usuarioId], references: [id])
  usuarioId Int?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}
